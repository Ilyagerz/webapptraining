'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { useAppStore } from '@/lib/store';
import { getTelegramWebApp } from '@/lib/telegram';

export default function Home() {
  const router = useRouter();
  const { user, setUser } = useAppStore();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const authenticateUser = async () => {
      // –î–∞–µ–º –≤—Ä–µ–º—è Telegram SDK –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
      await new Promise(resolve => setTimeout(resolve, 500));
      
      const tg = getTelegramWebApp();
      
      console.log('üîç Telegram WebApp:', tg);
      console.log('üîç initData:', tg?.initData);
      console.log('üîç initDataUnsafe:', tg?.initDataUnsafe);
      
      if (tg && tg.initData) {
        // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram
        console.log('‚úÖ Telegram Web App detected, authenticating...');
        
        try {
          const response = await fetch('/api/auth/telegram', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include',
            body: JSON.stringify({ initData: tg.initData }),
          });

          console.log('üì° Response status:', response.status);
          
          if (response.ok) {
            const data = await response.json();
            console.log('‚úÖ Auth successful:', data.user);
            setUser(data.user);
            router.push('/dashboard');
          } else {
            const errorData = await response.json();
            console.error('‚ùå Auth failed:', errorData);
            setError(errorData.error || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
            setLoading(false);
          }
        } catch (error) {
          console.error('‚ùå Auth error:', error);
          setError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
          setLoading(false);
        }
      } else {
        // PWA —Ä–µ–∂–∏–º –±–µ–∑ Telegram
        console.log('‚ÑπÔ∏è Not in Telegram, checking for existing user...');
        if (user) {
          router.push('/dashboard');
        } else {
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
          router.push('/auth');
        }
        setLoading(false);
      }
    };

    authenticateUser();
  }, []);

  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="text-center space-y-8 max-w-md w-full">
        {/* Logo */}
        <div className="space-y-4">
          <div className="w-24 h-24 mx-auto bg-gradient-to-br from-electric-lime to-green-400 rounded-3xl flex items-center justify-center shadow-xl">
            <span className="text-4xl font-bold text-nubo-dark">N</span>
          </div>
          <h1 className="text-4xl font-bold tracking-tight">
            NUBO Training
          </h1>
          <p className="text-muted-foreground">
            –¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
          </p>
        </div>

        {/* Loading / Error */}
        <div className="space-y-4">
          {loading ? (
            <>
              <div className="flex items-center justify-center space-x-2">
                <div className="w-2 h-2 bg-electric-lime rounded-full animate-bounce" style={{ animationDelay: '0ms' }} />
                <div className="w-2 h-2 bg-electric-lime rounded-full animate-bounce" style={{ animationDelay: '150ms' }} />
                <div className="w-2 h-2 bg-electric-lime rounded-full animate-bounce" style={{ animationDelay: '300ms' }} />
              </div>
              <p className="text-sm text-muted-foreground">
                –ó–∞–≥—Ä—É–∑–∫–∞...
              </p>
            </>
          ) : error ? (
            <>
              <p className="text-red-500">{error}</p>
              <button
                onClick={() => typeof window !== 'undefined' && window.location.reload()}
                className="px-6 py-3 bg-electric-lime text-nubo-dark rounded-xl font-bold"
              >
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </>
          ) : null}
        </div>

        {/* Features */}
        <div className="grid grid-cols-2 gap-4 text-left">
          <div className="p-4 rounded-xl glass-effect">
            <div className="text-2xl mb-2">üí™</div>
            <h3 className="font-semibold text-sm">–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</h3>
            <p className="text-xs text-muted-foreground">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
          </div>
          <div className="p-4 rounded-xl glass-effect">
            <div className="text-2xl mb-2">üìä</div>
            <h3 className="font-semibold text-sm">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <p className="text-xs text-muted-foreground">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</p>
          </div>
          <div className="p-4 rounded-xl glass-effect">
            <div className="text-2xl mb-2">ü§ñ</div>
            <h3 className="font-semibold text-sm">AI –ü—Ä–æ–≥—Ä–∞–º–º—ã</h3>
            <p className="text-xs text-muted-foreground">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã</p>
          </div>
          <div className="p-4 rounded-xl glass-effect">
            <div className="text-2xl mb-2">üì±</div>
            <h3 className="font-semibold text-sm">–û—Ñ—Ñ–ª–∞–π–Ω</h3>
            <p className="text-xs text-muted-foreground">–†–∞–±–æ—Ç–∞ –±–µ–∑ —Å–µ—Ç–∏</p>
          </div>
        </div>
      </div>
    </div>
  );
}

