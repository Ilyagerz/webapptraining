#!/usr/bin/env node

/**
 * üîç –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ GIF –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 *   npm run exercises:search-gif "bench press"
 *   npm run exercises:search-gif "—Å—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞"
 */

const fs = require('fs');
const path = require('path');

const DB_FILE = path.join(__dirname, '../data/exercisedb-gifs.json');
const searchQuery = process.argv[2];

if (!searchQuery) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è');
  console.log('\nüìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.log('   npm run exercises:search-gif "bench press"');
  console.log('   npm run exercises:search-gif "—Å—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞"');
  process.exit(1);
}

if (!fs.existsSync(DB_FILE)) {
  console.error('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
  console.log('\nüí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:');
  console.log('   npm run exercises:fetch-gifs');
  process.exit(1);
}

try {
  const data = JSON.parse(fs.readFileSync(DB_FILE, 'utf-8'));
  const query = searchQuery.toLowerCase();

  console.log(`üîç –ü–æ–∏—Å–∫: "${searchQuery}"\n`);

  // –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  const matches = data.exercises.filter(ex => 
    ex.name.toLowerCase().includes(query) ||
    ex.nameRu.toLowerCase().includes(query)
  );

  if (matches.length === 0) {
    console.log('‚ùå –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    console.log('\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:');
    console.log('   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ');
    console.log('   - –£–ø—Ä–æ—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "press" –≤–º–µ—Å—Ç–æ "bench press")');
    console.log('   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è');
    process.exit(0);
  }

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: ${matches.length}\n`);

  matches.slice(0, 20).forEach((ex, index) => {
    console.log(`${index + 1}. ${ex.name}`);
    console.log(`   RU: ${ex.nameRu}`);
    console.log(`   ID: ${ex.id}`);
    console.log(`   GIF: ${ex.gifUrl}`);
    console.log(`   –ì—Ä—É–ø–ø–∞: ${ex.bodyPart} ‚Üí ${ex.target}`);
    console.log(`   –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: ${ex.equipment}`);
    console.log('');
  });

  if (matches.length > 20) {
    console.log(`... –∏ –µ—â–µ ${matches.length - 20} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π\n`);
  }

  console.log('üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ gifUrl –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –≤–∞—à–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ!');

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  process.exit(1);
}

