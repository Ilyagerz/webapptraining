const fs = require('fs');
const path = require('path');

// –°–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
const translationDict = {
  // –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
  'barbell': '—à—Ç–∞–Ω–≥–∞',
  'dumbbell': '–≥–∞–Ω—Ç–µ–ª—å',
  'dumbbells': '–≥–∞–Ω—Ç–µ–ª–∏',
  'cable': '–∫–∞–±–µ–ª—å',
  'machine': '—Ç—Ä–µ–Ω–∞–∂–µ—Ä',
  'smith machine': '–º–∞—à–∏–Ω–∞ –°–º–∏—Ç–∞',
  'lever': '—Ä—ã—á–∞–≥',
  'ez barbell': 'EZ-—à—Ç–∞–Ω–≥–∞',
  'kettlebell': '–≥–∏—Ä—è',
  'band': '—Ä–µ–∑–∏–Ω–∫–∞',
  'bands': '—Ä–µ–∑–∏–Ω–∫–∏',
  'resistance band': '—Ä–µ–∑–∏–Ω–∫–∞ –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å–∞',
  
  // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
  'squat': '–ø—Ä–∏—Å–µ–¥',
  'squats': '–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è',
  'press': '–∂–∏–º',
  'bench press': '–∂–∏–º –ª–µ–∂–∞',
  'deadlift': '—Å—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞',
  'curl': '—Å–≥–∏–±–∞–Ω–∏–µ',
  'curls': '—Å–≥–∏–±–∞–Ω–∏—è',
  'extension': '—Ä–∞–∑–≥–∏–±–∞–Ω–∏–µ',
  'extensions': '—Ä–∞–∑–≥–∏–±–∞–Ω–∏—è',
  'raise': '–ø–æ–¥—ä–µ–º',
  'raises': '–ø–æ–¥—ä–µ–º—ã',
  'row': '—Ç—è–≥–∞',
  'rows': '—Ç—è–≥–∏',
  'pull': '—Ç—è–≥–∞',
  'pulldown': '—Ç—è–≥–∞ –≤–Ω–∏–∑',
  'pullover': '–ø—É–ª–æ–≤–µ—Ä',
  'push': '—Ç–æ–ª—á–æ–∫',
  'pushdown': '—Ç–æ–ª—á–æ–∫ –≤–Ω–∏–∑',
  'fly': '—Ä–∞–∑–≤–µ–¥–µ–Ω–∏–µ',
  'flyes': '—Ä–∞–∑–≤–µ–¥–µ–Ω–∏—è',
  'shrug': '—à—Ä–∞–≥–∏',
  'shrugs': '—à—Ä–∞–≥–∏',
  'lunge': '–≤—ã–ø–∞–¥',
  'lunges': '–≤—ã–ø–∞–¥—ã',
  'calf': '–∏–∫—Ä–∞',
  'calves': '–∏–∫—Ä—ã',
  'crunch': '—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏–µ',
  'crunches': '—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è',
  'plank': '–ø–ª–∞–Ω–∫–∞',
  'twist': '—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏–µ',
  'lateral': '–±–æ–∫–æ–≤–æ–π',
  'front': '–ø–µ—Ä–µ–¥–Ω–∏–π',
  'rear': '–∑–∞–¥–Ω–∏–π',
  'decline': '–Ω–∞–∫–ª–æ–Ω–Ω—ã–π –≤–Ω–∏–∑',
  'incline': '–Ω–∞–∫–ª–æ–Ω–Ω—ã–π –≤–≤–µ—Ä—Ö',
  'flat': '–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π',
  'standing': '—Å—Ç–æ—è',
  'seated': '—Å–∏–¥—è',
  'lying': '–ª–µ–∂–∞',
  'bent over': '–≤ –Ω–∞–∫–ª–æ–Ω–µ',
  'overhead': '–Ω–∞–¥ –≥–æ–ª–æ–≤–æ–π',
  'hammer': '–º–æ–ª–æ—Ç',
  'reverse': '–æ–±—Ä–∞—Ç–Ω—ã–π',
  'close grip': '—É–∑–∫–∏–π —Ö–≤–∞—Ç',
  'wide grip': '—à–∏—Ä–æ–∫–∏–π —Ö–≤–∞—Ç',
  'neutral grip': '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ö–≤–∞—Ç',
  'underhand': '–æ–±—Ä–∞—Ç–Ω—ã–º —Ö–≤–∞—Ç–æ–º',
  'overhand': '–ø—Ä—è–º—ã–º —Ö–≤–∞—Ç–æ–º',
  'one arm': '–æ–¥–Ω–æ–π —Ä—É–∫–æ–π',
  'single arm': '–æ–¥–Ω–æ–π —Ä—É–∫–æ–π',
  'alternate': '–ø–æ–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–π',
  'alternating': '–ø–æ–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–π',
  'arnold': '–ê—Ä–Ω–æ–ª—å–¥',
  
  // –ß–∞—Å—Ç–∏ —Ç–µ–ª–∞
  'chest': '–≥—Ä—É–¥—å',
  'back': '—Å–ø–∏–Ω–∞',
  'shoulder': '–ø–ª–µ—á–æ',
  'shoulders': '–ø–ª–µ—á–∏',
  'biceps': '–±–∏—Ü–µ–ø—Å',
  'triceps': '—Ç—Ä–∏—Ü–µ–ø—Å',
  'forearm': '–ø—Ä–µ–¥–ø–ª–µ—á—å–µ',
  'forearms': '–ø—Ä–µ–¥–ø–ª–µ—á—å—è',
  'leg': '–Ω–æ–≥–∞',
  'legs': '–Ω–æ–≥–∏',
  'thigh': '–±–µ–¥—Ä–æ',
  'thighs': '–±–µ–¥—Ä–∞',
  'hamstring': '–∑–∞–¥–Ω—è—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –±–µ–¥—Ä–∞',
  'hamstrings': '–∑–∞–¥–Ω—è—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –±–µ–¥—Ä–∞',
  'quadriceps': '–∫–≤–∞–¥—Ä–∏—Ü–µ–ø—Å',
  'glute': '—è–≥–æ–¥–∏—Ü–∞',
  'glutes': '—è–≥–æ–¥–∏—Ü—ã',
  'abs': '–ø—Ä–µ—Å—Å',
  'abdominal': '–±—Ä—é—à–Ω–æ–π',
  'core': '–∫–æ—Ä',
  'lower back': '–Ω–∏–∂–Ω—è—è —á–∞—Å—Ç—å —Å–ø–∏–Ω—ã',
  'upper back': '–≤–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å —Å–ø–∏–Ω—ã',
  'middle back': '—Å—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç—å —Å–ø–∏–Ω—ã',
  'trapezius': '—Ç—Ä–∞–ø–µ—Ü–∏—è',
  'lat': '—à–∏—Ä–æ—á–∞–π—à–∞—è',
  'lats': '—à–∏—Ä–æ—á–∞–π—à–∏–µ',
  'deltoid': '–¥–µ–ª—å—Ç–∞',
  'deltoids': '–¥–µ–ª—å—Ç—ã',
  
  // –î–µ–π—Å—Ç–≤–∏—è
  'hold': '—É–¥–µ—Ä–∂–∞–Ω–∏–µ',
  'holding': '—É–¥–µ—Ä–∂–∞–Ω–∏–µ',
  'stretch': '—Ä–∞—Å—Ç—è–∂–∫–∞',
  'step': '—à–∞–≥',
  'walk': '—Ö–æ–¥—å–±–∞',
  'run': '–±–µ–≥',
  'jump': '–ø—Ä—ã–∂–æ–∫',
  'jumping': '–ø—Ä—ã–∂–∫–∏',
  'kick': '—É–¥–∞—Ä',
  'lift': '–ø–æ–¥—ä–µ–º',
  'lower': '–æ–ø—É—Å–∫–∞–Ω–∏–µ',
  
  // –ü–æ–∑–∏—Ü–∏–∏ –∏ —É–≥–ª—ã
  'high': '–≤—ã—Å–æ–∫–∏–π',
  'low': '–Ω–∏–∑–∫–∏–π',
  'upper': '–≤–µ—Ä—Ö–Ω–∏–π',
  'lower': '–Ω–∏–∂–Ω–∏–π',
  'inner': '–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π',
  'outer': '–≤–Ω–µ—à–Ω–∏–π',
  'parallel': '–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π',
  'full': '–ø–æ–ª–Ω—ã–π',
  'half': '–ø–æ–ª–æ–≤–∏–Ω–Ω—ã–π',
  'quarter': '—á–µ—Ç–≤–µ—Ä—Ç—å',
  'deep': '–≥–ª—É–±–æ–∫–∏–π',
  
  // –î—Ä—É–≥–æ–µ
  'around': '–≤–æ–∫—Ä—É–≥',
  'world': '–º–∏—Ä',
  'wheel': '–∫–æ–ª–µ—Å–æ',
  'ball': '–º—è—á',
  'slams': '—É–¥–∞—Ä—ã',
  'on': '–Ω–∞',
  'with': '—Å',
  'to': '–∫',
  'the': '',
  'a': '',
  'an': '',
  'of': '',
  'and': '–∏',
};

// –§—É–Ω–∫—Ü–∏—è —É–º–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
function translateExerciseName(englishName) {
  if (!englishName) return englishName;
  
  let translated = englishName.toLowerCase();
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª—é—á–∏ –ø–æ –¥–ª–∏–Ω–µ (–¥–ª–∏–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã –ø–µ—Ä–≤—ã–º–∏)
  const sortedKeys = Object.keys(translationDict).sort((a, b) => b.length - a.length);
  
  // –ó–∞–º–µ–Ω—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ
  for (const key of sortedKeys) {
    const value = translationDict[key];
    if (value) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã —Ü–µ–ª—ã—Ö —Å–ª–æ–≤
      const regex = new RegExp(`\\b${key}\\b`, 'gi');
      translated = translated.replace(regex, value);
    }
  }
  
  // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
  translated = translated.replace(/\s+/g, ' ').trim();
  
  // –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∑–∞–≥–ª–∞–≤–Ω–∞—è
  translated = translated.charAt(0).toUpperCase() + translated.slice(1);
  
  // –£–±–∏—Ä–∞–µ–º —Å–∫–æ–±–∫–∏ –µ—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –Ω–∏—á–µ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ
  translated = translated.replace(/\(\s*\)/g, '');
  translated = translated.replace(/\s+/g, ' ').trim();
  
  return translated;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function translateExerciseNames() {
  const inputPath = path.join(__dirname, '..', 'data', 'custom-exercises.json');
  const outputPath = path.join(__dirname, '..', 'data', 'custom-exercises-ru.json');
  
  console.log('üìñ –ß–∏—Ç–∞—é —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏–∑:', inputPath);
  
  const data = JSON.parse(fs.readFileSync(inputPath, 'utf8'));
  
  console.log(`üìù –ü–µ—Ä–µ–≤–æ–¥—É ${data.length} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...`);
  
  const translated = data.map((exercise, index) => {
    const russianName = translateExerciseName(exercise.name);
    
    if ((index + 1) % 10 === 0) {
      console.log(`   ${index + 1}/${data.length}: ${exercise.name} ‚Üí ${russianName}`);
    }
    
    return {
      ...exercise,
      name: russianName,
      nameEn: exercise.name,
    };
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º
  fs.writeFileSync(outputPath, JSON.stringify(translated, null, 2), 'utf8');
  
  console.log(`\n‚úÖ –ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: ${outputPath}`);
  console.log(`üìä –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ ${translated.length} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π`);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
  console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤:');
  for (let i = 0; i < Math.min(10, translated.length); i++) {
    console.log(`   ${translated[i].nameEn}`);
    console.log(`   ‚Üí ${translated[i].name}`);
    console.log('');
  }
}

translateExerciseNames().catch(console.error);

